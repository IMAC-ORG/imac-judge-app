# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - run: |
          cd judge
          mvn clean package
    - run: ls judge/target/
    - run: mkdir staging && cp judge/target/*.jar staging
    - uses: actions/upload-artifact@v3
      with:
        name: Package
        path: staging
    - id: get-version
      uses: jactions/maven-version@v1.2.0
      with:
        pom: ./judge/pom.xml
    - run: echo ${{ steps.get-version.outputs.version }}
    - name: Create Tag
      uses: negz/create-tag@v1
      with:
        version: ${{ steps.get-version.outputs.version }}
        message: "Testing automation"
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release
      id: create_release
      uses: Roang-zero1/github-create-release-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        created_tag: ${{ steps.get-version.outputs.version }}
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: judge/target/judge-${{ steps.get-version.outputs.version }}.jar
          asset_name: judge-${{ steps.get-version.outputs.version }}.jar
          asset_content_type: application/java
    - name: Upload release artifacts
      uses: Roang-zero1/github-upload-release-artifacts-action@v3.0.0
      with:
        args: "staging/"
        created_tag: ${{ steps.get-version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
