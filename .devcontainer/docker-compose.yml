version: '3'

services:
  # You can include other services not opened by VS Code as well
  judge:
    image: mcr.microsoft.com/devcontainers/java:0-17
    volumes:
      # Mount the root folder that contains .git
      - ../judge:/workspace
      - ./judge:/var/opt/judge
      - ../figures:/var/opt/judge/figures
    command: /bin/sh -c "while sleep 1000; do :; done"
    restart: unless-stopped
    
  score_web:
    # Using a Dockerfile is optional, but included for completeness.
    build: 
      context: .
      dockerfile: score/Dockerfile
  #  volumes:
      # This is where VS Code should expect to find your project's source code and the value of "workspaceFolder" in .devcontainer/devcontainer.json
  #    - ./app:/score
    ports:
      - 8181:8181
      - 3000:3000
    # Runs app on the same network as the service container, allows "forwardPorts" in devcontainer.json function.
    network_mode: bridge
    #restart: unless-stopped
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

    # Uncomment the next line to use a non-root user for all processes - See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined
    # Overrides default command so things don't shut down after the process ends.


    # As in the "app" service, use "forwardPorts" in **devcontainer.json** to forward an app port locally.